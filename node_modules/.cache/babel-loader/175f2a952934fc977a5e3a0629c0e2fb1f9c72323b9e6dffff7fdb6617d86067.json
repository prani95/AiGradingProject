{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prani\\\\Documents\\\\Progetto AIGrading\\\\AiGradingProject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport Fight from './Fight/Fight';\nimport Home from './Pages/Home/Home';\nimport Grading from './Pages/Grading/Grading';\nimport Pause from './Pause/Pause';\nimport Company from './Pages/Company/Company';\nimport chillAudio from \"./music/ChillingTheme.mp3\";\nimport battleAudio from \"./music/BattleTheme.mp3\";\nimport startMenuAudio from \"../music/startmenu.mp3\";\nimport GameBoy from './GameBoy/GameBoy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [position, setPosition] = useState({});\n  const [windowWidth] = useState(window.innerWidth);\n  const [windowHeight] = useState(window.innerHeight);\n  const [isInBattle, setIsInBattle] = useState(false);\n  const [isInPause, setIsInPause] = useState(false);\n  const [currentPage, setCurrentPage] = useState('');\n  const [audioBg] = useState(new Audio(chillAudio));\n  const [audioFight] = useState(new Audio(battleAudio));\n  const [audioStartMenu] = useState(new Audio(startMenuAudio));\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n  const inPauseRef = useRef(isInPause);\n  const numRows = Math.floor(windowHeight / 32);\n  const numCells = Math.floor(windowWidth / 32);\n  const pokemonEncounterRate = 10;\n  useEffect(() => {\n    let coordX = Math.floor(numCells / 2) - 1;\n    let coordY = Math.floor(numRows / 2);\n    let objCoords = {\n      x: coordX,\n      y: coordY\n    };\n    posRef.current = objCoords;\n    setPosition(objCoords);\n    window.addEventListener('keyup', movementHandler);\n  }, []);\n  const switchPage = () => {\n    switch (currentPage) {\n      case 'Home':\n        return /*#__PURE__*/_jsxDEV(Home, {\n          windowWidth: windowWidth,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      case 'Grading':\n        return /*#__PURE__*/_jsxDEV(Grading, {\n          windowWidth: windowWidth,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n      case 'Company':\n        return /*#__PURE__*/_jsxDEV(Company, {\n          windowWidth: windowWidth,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  //#region audioHandlers\n  const playAudioBG = () => {\n    audioBg.play();\n    audioBg.volume = 0.05;\n    audioBg.loop = true;\n  };\n  const playAudioFight = () => {\n    audioBg.pause();\n    audioBg.currentTime = 0;\n    audioFight.play();\n    audioFight.volume = 0.05;\n    audioFight.loop = true;\n  };\n  const playAudioStartMenu = () => {\n    audioStartMenu.pause();\n    audioStartMenu.currentTime = 0;\n    audioStartMenu.play();\n    audioStartMenu.volume = 0.05;\n  };\n  const stopAudioFight = () => {\n    audioFight.pause();\n    audioFight.currentTime = 0;\n    playAudioBG();\n  };\n  //#endregion\n\n  const EncounterHandler = randomEncounter => {\n    return randomEncounter < pokemonEncounterRate;\n  };\n  const pause = () => {\n    inPauseRef.current = !inPauseRef.current;\n    setIsInPause(inPauseRef.current);\n    playAudioStartMenu();\n  };\n  const move = move => {\n    let obj = {};\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    switch (move) {\n      case 'ArrowUp':\n        obj = {\n          x: posX,\n          y: posY - 1 < 0 ? 0 : posY - 1\n        };\n        break;\n      case 'ArrowDown':\n        obj = {\n          x: posX,\n          y: posY + 1 >= numRows - 1 ? numRows - 1 : posY + 1\n        };\n        break;\n      case 'ArrowLeft':\n        obj = {\n          x: posX - 1 < 0 ? 0 : posX - 1,\n          y: posY\n        };\n        break;\n      case 'ArrowRight':\n        obj = {\n          x: posX + 1 >= numCells - 1 ? numCells - 1 : posX + 1,\n          y: posY\n        };\n        break;\n    }\n    posRef.current = obj;\n    setPosition(obj);\n    let randomEncounter = Math.floor(Math.random() * 100);\n    if (EncounterHandler(randomEncounter)) {\n      inBattleRef.current = true;\n      setIsInBattle(true);\n      setCurrentPage('');\n    }\n  };\n  const movementHandler = direction => {\n    if (direction.key !== 'ArrowUp' && direction.key !== 'ArrowDown' && direction.key !== 'ArrowLeft' && direction.key !== 'ArrowRight') return;\n    if (inPauseRef.current) return;\n    if (inBattleRef.current) return;\n    playAudioBG();\n    move(direction.key);\n  };\n  useEffect(() => {\n    if (isInBattle) {\n      playAudioFight();\n    } else {\n      stopAudioFight();\n      inBattleRef.current = false;\n    }\n  }, [isInBattle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GameBoy, {\n        windowWidth: windowWidth,\n        windowHeight: windowHeight,\n        move: move,\n        inPauseRef: inPauseRef,\n        pauseFunction: pause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), isInBattle ? /*#__PURE__*/_jsxDEV(Fight, {\n        setIsInBattle: setIsInBattle,\n        setCurrentPage: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Pause, {\n          setIsInPause: setIsInPause,\n          inPauseRef: inPauseRef,\n          pauseFunction: pause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GrassGrid, {\n          x: numCells,\n          y: numRows,\n          playerPosition: {\n            x: position.x,\n            y: position.y\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-section\",\n      children: switchPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4/RNppelbJr9o/wAQLbU8l1dxQs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GrassGrid","Fight","Home","Grading","Pause","Company","chillAudio","battleAudio","startMenuAudio","GameBoy","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","position","setPosition","windowWidth","window","innerWidth","windowHeight","innerHeight","isInBattle","setIsInBattle","isInPause","setIsInPause","currentPage","setCurrentPage","audioBg","Audio","audioFight","audioStartMenu","posRef","inBattleRef","inPauseRef","numRows","Math","floor","numCells","pokemonEncounterRate","coordX","coordY","objCoords","x","y","current","addEventListener","movementHandler","switchPage","fileName","_jsxFileName","lineNumber","columnNumber","playAudioBG","play","volume","loop","playAudioFight","pause","currentTime","playAudioStartMenu","stopAudioFight","EncounterHandler","randomEncounter","move","obj","posX","posY","random","direction","key","className","children","pauseFunction","playerPosition","_c","$RefreshReg$"],"sources":["C:/Users/Prani/Documents/Progetto AIGrading/AiGradingProject/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React,{useState,useEffect, useRef} from 'react';\r\nimport GrassGrid from './GrassGrid/GrassGrid';\r\nimport Fight from './Fight/Fight';\r\nimport Home from './Pages/Home/Home';\r\nimport Grading from './Pages/Grading/Grading';\r\nimport Pause from './Pause/Pause';\r\nimport Company from './Pages/Company/Company';\r\nimport chillAudio from \"./music/ChillingTheme.mp3\";\r\nimport battleAudio from \"./music/BattleTheme.mp3\";\r\nimport startMenuAudio from \"../music/startmenu.mp3\";\r\nimport GameBoy from './GameBoy/GameBoy';\r\n\r\nfunction App() {\r\n\r\n  const [position, setPosition] = useState({});\r\n\r\n  const [windowWidth] = useState(window.innerWidth);\r\n  const [windowHeight] = useState(window.innerHeight);\r\n\r\n  const [isInBattle, setIsInBattle] = useState(false);\r\n  const [isInPause, setIsInPause] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState('');\r\n\r\n  const [audioBg] = useState(new Audio(chillAudio));\r\n  const [audioFight] = useState(new Audio(battleAudio));\r\n  const [audioStartMenu] = useState(new Audio(startMenuAudio));\r\n\r\n  const posRef = useRef(position);\r\n  const inBattleRef = useRef(isInBattle);\r\n  const inPauseRef = useRef(isInPause);\r\n\r\n  const numRows = Math.floor(windowHeight / 32);\r\n  const numCells = Math.floor(windowWidth / 32);\r\n  const pokemonEncounterRate = 10;\r\n\r\n  useEffect(() => {\r\n    let coordX = Math.floor(numCells/2) - 1;\r\n    let coordY = Math.floor(numRows/2);\r\n    let objCoords = {\r\n        x: coordX,\r\n        y: coordY\r\n    } \r\n    posRef.current = objCoords;\r\n\r\n    setPosition(objCoords);\r\n\r\n    window.addEventListener('keyup', movementHandler);\r\n  },[])\r\n\r\n  const switchPage = () => {\r\n    switch(currentPage){\r\n      case 'Home':\r\n        return <Home windowWidth = {windowWidth} setCurrentPage = {setCurrentPage}></Home>\r\n      case 'Grading':\r\n        return <Grading windowWidth = {windowWidth} setCurrentPage = {setCurrentPage}></Grading>\r\n      case 'Company':\r\n        return <Company windowWidth = {windowWidth} setCurrentPage = {setCurrentPage}></Company>\r\n      default:\r\n        return <div></div>\r\n    }\r\n  }\r\n\r\n  //#region audioHandlers\r\n  const playAudioBG = () => {\r\n    audioBg.play();\r\n    audioBg.volume = 0.05;\r\n    audioBg.loop = true;\r\n  }\r\n\r\n  const playAudioFight = () => {\r\n    audioBg.pause();\r\n    audioBg.currentTime = 0;\r\n    audioFight.play();\r\n    audioFight.volume = 0.05;\r\n    audioFight.loop = true;\r\n  }\r\n\r\n  const playAudioStartMenu = () => {\r\n    audioStartMenu.pause();\r\n    audioStartMenu.currentTime = 0;\r\n    audioStartMenu.play();\r\n    audioStartMenu.volume = 0.05;\r\n  }\r\n\r\n  const stopAudioFight = () => {\r\n    audioFight.pause();\r\n    audioFight.currentTime = 0;\r\n    playAudioBG();\r\n  }\r\n  //#endregion\r\n\r\n  const EncounterHandler = (randomEncounter) => {\r\n    return randomEncounter < pokemonEncounterRate;\r\n  }\r\n\r\n  const pause = ()=>{\r\n    inPauseRef.current = !inPauseRef.current;\r\n    setIsInPause(inPauseRef.current);\r\n    playAudioStartMenu();\r\n  }\r\n\r\n  const move = (move) => {\r\n    let obj  = {};\r\n    let posX = posRef.current.x;\r\n    let posY = posRef.current.y;\r\n    switch(move){\r\n      case 'ArrowUp':\r\n          obj = {\r\n              x: posX,\r\n              y: (posY - 1 < 0) ? 0 : posY -1\r\n          }\r\n      break;\r\n      case 'ArrowDown':\r\n          obj = {\r\n              x: posX,\r\n              y: (posY + 1 >= numRows - 1) ? numRows - 1 : posY + 1\r\n          }\r\n      break;\r\n      case 'ArrowLeft':\r\n          obj = {\r\n              x: (posX - 1 < 0) ? 0 :posX - 1,\r\n              y: posY\r\n          }\r\n      break;\r\n      case 'ArrowRight':\r\n          obj = {\r\n              x: (posX + 1 >= numCells - 1) ? numCells - 1 : posX + 1,\r\n              y: posY\r\n          }\r\n      break;\r\n    }\r\n    posRef.current = obj;\r\n    setPosition(obj);\r\n    let randomEncounter =  Math.floor(Math.random() * 100);\r\n    if(EncounterHandler(randomEncounter)){\r\n      inBattleRef.current = true;\r\n      setIsInBattle(true);\r\n      setCurrentPage('');\r\n    }\r\n  }\r\n\r\n  const movementHandler = (direction) => {\r\n    if(direction.key !== 'ArrowUp' && direction.key !== 'ArrowDown' && direction.key !== 'ArrowLeft' && direction.key !== 'ArrowRight') return;\r\n    if(inPauseRef.current) return;\r\n    if(inBattleRef.current) return;\r\n    playAudioBG()\r\n    move(direction.key);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isInBattle) { playAudioFight() }\r\n    else { stopAudioFight(); inBattleRef.current = false}\r\n  },[isInBattle]) \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <GameBoy\r\n          windowWidth = {windowWidth}\r\n          windowHeight = {windowHeight}\r\n          move = {move}\r\n          inPauseRef = {inPauseRef}\r\n          pauseFunction = {pause}>\r\n        </GameBoy>\r\n        {isInBattle ? \r\n        <Fight\r\n          setIsInBattle = {setIsInBattle}\r\n          setCurrentPage = {setCurrentPage}>\r\n        </Fight>\r\n        :\r\n        <>\r\n          <Pause \r\n              setIsInPause = {setIsInPause}\r\n              inPauseRef = {inPauseRef}\r\n              pauseFunction = {pause}>\r\n          </Pause>\r\n          <GrassGrid \r\n            x = {numCells} \r\n            y = {numRows} \r\n            playerPosition = {{x: position.x, y: position.y}}>\r\n          </GrassGrid>\r\n        </>\r\n        }\r\n      </div>\r\n      <div className='bottom-section'>\r\n        {switchPage()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}