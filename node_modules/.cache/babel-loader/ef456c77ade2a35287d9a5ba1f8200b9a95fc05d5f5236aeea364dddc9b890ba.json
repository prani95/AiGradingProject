{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prani\\\\Documents\\\\Progetto AIGrading\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport Fight from './Fight/Fight';\nimport chillAudio from \"./music/ChillingTheme.mp3\";\nimport battleAudio from \"./music/BattleTheme.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const numRows = 20;\n  const numCells = 80;\n  const pokemonEncounterRate = 25;\n  const [position, setPosition] = useState({});\n  const [isInBattle, setIsInBattle] = useState(false);\n  const [moveSelected, setMoveSelected] = useState('');\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n  useEffect(() => {\n    let coordX = Math.floor(numCells / 2) - 1;\n    let coordY = Math.floor(numRows / 2) - 1;\n    let objCoords = {\n      x: coordX,\n      y: coordY\n    };\n    posRef.current = objCoords;\n    setPosition(objCoords);\n    window.addEventListener('keyup', movementHandler);\n  }, []);\n  const playAudioBG = () => {\n    const audio = new Audio(chillAudio);\n    // Loop indefinitely until stop() is called\n    audio.play();\n    audio.volume = 0.05;\n    audio.loop = true;\n  };\n  const playAudioFight = () => {\n    const audio = new Audio(battleAudio);\n    // Loop indefinitely until stop() is called\n    audio.play();\n    audio.volume = 0.05;\n    audio.loop = true;\n  };\n  const EncounterHandler = randomEncounter => {\n    return randomEncounter < pokemonEncounterRate;\n  };\n  const movementHandler = direction => {\n    if (inBattleRef.current) return;\n    playAudioBG();\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    let obj = {};\n    let randomEncounter = Math.floor(Math.random() * 100);\n    switch (direction.key) {\n      case 'ArrowUp':\n        obj = {\n          x: posX,\n          y: posY - 1 < 0 ? 0 : posY - 1\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowDown':\n        obj = {\n          x: posX,\n          y: posY + 1 >= numRows - 1 ? numRows - 1 : posY + 1\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowLeft':\n        obj = {\n          x: posX - 1 < 0 ? 0 : posX - 1,\n          y: posY\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowRight':\n        obj = {\n          x: posX + 1 >= numCells - 1 ? numCells - 1 : posX + 1,\n          y: posY\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n    }\n    inBattleRef.current = EncounterHandler(randomEncounter);\n    setIsInBattle(EncounterHandler(randomEncounter));\n  };\n  useEffect(() => {\n    console.log(position);\n  }, [position]);\n  useEffect(() => {\n    console.log(isInBattle);\n  }, [isInBattle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isInBattle ? /*#__PURE__*/_jsxDEV(Fight, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(GrassGrid, {\n      x: numCells,\n      y: numRows,\n      playerPosition: {\n        x: position.x,\n        y: position.y\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), moveSelected ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VW7dg5YtI+o5L/7W/C1OFAmaf1w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GrassGrid","Fight","chillAudio","battleAudio","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","numRows","numCells","pokemonEncounterRate","position","setPosition","isInBattle","setIsInBattle","moveSelected","setMoveSelected","posRef","inBattleRef","coordX","Math","floor","coordY","objCoords","x","y","current","window","addEventListener","movementHandler","playAudioBG","audio","Audio","play","volume","loop","playAudioFight","EncounterHandler","randomEncounter","direction","posX","posY","obj","random","key","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","playerPosition","_c","$RefreshReg$"],"sources":["C:/Users/Prani/Documents/Progetto AIGrading/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React,{useState,useEffect, useRef} from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport Fight from './Fight/Fight';\nimport chillAudio from \"./music/ChillingTheme.mp3\";\nimport battleAudio from \"./music/BattleTheme.mp3\";\n\nfunction App() {\n  \n  const numRows = 20;\n  const numCells = 80;\n  const pokemonEncounterRate = 25;\n\n  const [position, setPosition] = useState({});\n  const [isInBattle, setIsInBattle] = useState(false);\n\n  const [moveSelected, setMoveSelected] = useState('');\n\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n\n  useEffect(() => {\n    let coordX = Math.floor(numCells/2) - 1;\n    let coordY = Math.floor(numRows/2) - 1;\n    let objCoords = {\n        x: coordX,\n        y: coordY\n    } \n    posRef.current = objCoords;\n\n    setPosition(objCoords);\n\n    window.addEventListener('keyup', movementHandler)\n    \n  },[])\n\n  const playAudioBG = () => {\n    const audio = new Audio(chillAudio)\n    // Loop indefinitely until stop() is called\n    audio.play();\n    audio.volume = 0.05;\n    audio.loop = true;\n }\n\n const playAudioFight = () => {\n  const audio = new Audio(battleAudio)\n  // Loop indefinitely until stop() is called\n  audio.play();\n  audio.volume = 0.05;\n  audio.loop = true;\n}\n\n  const EncounterHandler = (randomEncounter) => {\n    return randomEncounter < pokemonEncounterRate;\n  }\n\n  const movementHandler = (direction) => {\n    if(inBattleRef.current)return;\n    playAudioBG()\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    let obj  = {}; \n    let randomEncounter =  Math.floor(Math.random() * 100)\n    switch(direction.key){\n        case 'ArrowUp':\n            obj = {\n                x: posX,\n                y: (posY - 1 < 0) ? 0 : posY -1\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowDown':\n            obj = {\n                x: posX,\n                y: (posY + 1 >= numRows - 1) ? numRows - 1 : posY + 1\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowLeft':\n            obj = {\n                x: (posX - 1 < 0) ? 0 :posX - 1,\n                y: posY\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowRight':\n            obj = {\n                x: (posX + 1 >= numCells - 1) ? numCells - 1 : posX + 1,\n                y: posY\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n    }\n    inBattleRef.current = EncounterHandler(randomEncounter)\n    setIsInBattle(EncounterHandler(randomEncounter))\n  }\n\n  useEffect(() => {\n    console.log(position)\n  },[position]) \n\n  useEffect(() => {\n    console.log(isInBattle)\n  },[isInBattle]) \n\n  return (\n    <div className=\"App\">\n      {isInBattle ? \n      <Fight></Fight>\n      :\n      <GrassGrid \n        x = {numCells} \n        y = {numRows} \n        playerPosition = {{x: position.x, y: position.y}}>\n      </GrassGrid>}\n      {moveSelected ?\n      <></>\n      :\n      null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}