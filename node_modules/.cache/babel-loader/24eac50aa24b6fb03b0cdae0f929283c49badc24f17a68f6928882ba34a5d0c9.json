{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prani\\\\Documents\\\\Progetto AIGrading\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport Fight from './Fight/Fight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const numRows = 20;\n  const numCells = 80;\n  const pokemonEncounterRate = 25;\n  const [position, setPosition] = useState({});\n  const [isInBattle, setIsInBattle] = useState(false);\n  const [moveSelected, setMoveSelected] = useState('');\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n  useEffect(() => {\n    let coordX = Math.floor(numCells / 2) - 1;\n    let coordY = Math.floor(numRows / 2) - 1;\n    let objCoords = {\n      x: coordX,\n      y: coordY\n    };\n    posRef.current = objCoords;\n    setPosition(objCoords);\n    playAudio();\n    window.addEventListener('keyup', movementHandler);\n  }, []);\n  const playAudio = () => {\n    // Loop indefinitely until stop() is called\n    sound.setNumberOfLoops(-1).play();\n  };\n  const EncounterHandler = randomEncounter => {\n    return randomEncounter < pokemonEncounterRate;\n  };\n  const movementHandler = direction => {\n    if (inBattleRef.current) return;\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    let obj = {};\n    let randomEncounter = Math.floor(Math.random() * 100);\n    switch (direction.key) {\n      case 'ArrowUp':\n        obj = {\n          x: posX,\n          y: posY - 1 < 0 ? 0 : posY - 1\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowDown':\n        obj = {\n          x: posX,\n          y: posY + 1 >= numRows - 1 ? numRows - 1 : posY + 1\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowLeft':\n        obj = {\n          x: posX - 1 < 0 ? 0 : posX - 1,\n          y: posY\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowRight':\n        obj = {\n          x: posX + 1 >= numCells - 1 ? numCells - 1 : posX + 1,\n          y: posY\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n    }\n    inBattleRef.current = EncounterHandler(randomEncounter);\n    setIsInBattle(EncounterHandler(randomEncounter));\n  };\n  useEffect(() => {\n    console.log(position);\n  }, [position]);\n  useEffect(() => {\n    console.log(isInBattle);\n  }, [isInBattle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isInBattle ? /*#__PURE__*/_jsxDEV(Fight, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(GrassGrid, {\n      x: numCells,\n      y: numRows,\n      playerPosition: {\n        x: position.x,\n        y: position.y\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), moveSelected ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VW7dg5YtI+o5L/7W/C1OFAmaf1w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GrassGrid","Fight","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","numRows","numCells","pokemonEncounterRate","position","setPosition","isInBattle","setIsInBattle","moveSelected","setMoveSelected","posRef","inBattleRef","coordX","Math","floor","coordY","objCoords","x","y","current","playAudio","window","addEventListener","movementHandler","sound","setNumberOfLoops","play","EncounterHandler","randomEncounter","direction","posX","posY","obj","random","key","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","playerPosition","_c","$RefreshReg$"],"sources":["C:/Users/Prani/Documents/Progetto AIGrading/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React,{useState,useEffect, useRef} from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport Fight from './Fight/Fight';\n\nfunction App() {\n  \n  const numRows = 20;\n  const numCells = 80;\n  const pokemonEncounterRate = 25;\n\n  const [position, setPosition] = useState({});\n  const [isInBattle, setIsInBattle] = useState(false);\n\n  const [moveSelected, setMoveSelected] = useState('');\n\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n\n  useEffect(() => {\n    let coordX = Math.floor(numCells/2) - 1;\n    let coordY = Math.floor(numRows/2) - 1;\n    let objCoords = {\n        x: coordX,\n        y: coordY\n    } \n    posRef.current = objCoords;\n\n    setPosition(objCoords);\n\n    playAudio()\n\n    window.addEventListener('keyup', movementHandler)\n    \n  },[])\n\n  const playAudio = () => {\n    // Loop indefinitely until stop() is called\n    sound.setNumberOfLoops(-1).play()\n }\n\n  const EncounterHandler = (randomEncounter) => {\n    return randomEncounter < pokemonEncounterRate;\n  }\n\n  const movementHandler = (direction) => {\n    if(inBattleRef.current)return;\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    let obj  = {}; \n    let randomEncounter =  Math.floor(Math.random() * 100)\n    switch(direction.key){\n        case 'ArrowUp':\n            obj = {\n                x: posX,\n                y: (posY - 1 < 0) ? 0 : posY -1\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowDown':\n            obj = {\n                x: posX,\n                y: (posY + 1 >= numRows - 1) ? numRows - 1 : posY + 1\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowLeft':\n            obj = {\n                x: (posX - 1 < 0) ? 0 :posX - 1,\n                y: posY\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowRight':\n            obj = {\n                x: (posX + 1 >= numCells - 1) ? numCells - 1 : posX + 1,\n                y: posY\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n    }\n    inBattleRef.current = EncounterHandler(randomEncounter)\n    setIsInBattle(EncounterHandler(randomEncounter))\n  }\n\n  useEffect(() => {\n    console.log(position)\n  },[position]) \n\n  useEffect(() => {\n    console.log(isInBattle)\n  },[isInBattle]) \n\n  return (\n    <div className=\"App\">\n      {isInBattle ? \n      <Fight></Fight>\n      :\n      <GrassGrid \n        x = {numCells} \n        y = {numRows} \n        playerPosition = {{x: position.x, y: position.y}}>\n      </GrassGrid>}\n      {moveSelected ?\n      <></>\n      :\n      null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}