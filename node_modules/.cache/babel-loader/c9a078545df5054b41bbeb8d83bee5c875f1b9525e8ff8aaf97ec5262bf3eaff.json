{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prani\\\\Documents\\\\Progetto AIGrading\\\\my-app\\\\src\\\\GrassGrid\\\\CreateTable\\\\CreateTable.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport erba from './assets/erba.png';\nimport logo from './assets/logoAiGrading.png';\nimport './CreateTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTable(props) {\n  _s();\n  const [playerPosition, setPlayerPosition] = useState();\n  const [table, setTable] = useState();\n  useEffect(() => {\n    const tableRows = [];\n    const rowCells = [];\n    for (let x = 0; x < props.rows; x++) {\n      for (let y = 0; y < props.columns; y++) {\n        rowCells.push({\n          key: y,\n          img: erba\n        });\n        //rowCells.push(`<td className='erba' key=${y}><div className='noheight'><img src=${erba}/></div></td>`);\n      }\n\n      tableRows.push({\n        key: x\n      });\n      //tableRows.push(`<tr key=${x}>${rowCells}</tr>`);\n    }\n\n    let tabella = tableRows.map(riga => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"AAAAA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, riga.x, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this);\n    });\n\n    /*   let rows = [];\r\n      //20 righe\r\n       */\n\n    console.log(tabella);\n    setTable(tabella);\n\n    /* Calculate the center coordinates\r\n    const centerRow = Math.floor(rows / 2) - 1;\r\n    const centerColumn = Math.floor(columns / 2) - 1;\r\n      if (tableRows[centerRow] && tableRows[centerRow].props.children[centerColumn]) {\r\n        setPlayerCenterPosition(centerRow,centerColumn)\r\n        tableRows[centerRow].props.children[centerColumn] = (\r\n          <td className='erba' key={centerColumn}>\r\n            <div className='noheight'>\r\n                <img className='tile' src={logo} alt=\"pg\" />\r\n            </div>\r\n          </td>\r\n        );\r\n    }*/\n  }, []);\n  function setPlayerCenterPosition(x, y) {\n    setPlayerPosition([x, y]);\n  }\n  const blabla = () => {\n    let arr = [1, 2, 3];\n    arr.map(n => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: blabla\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n_s(CreateTable, \"DOpH8NHO+9Im2E2MTPleoWiVLU0=\");\n_c = CreateTable;\nexport default CreateTable;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","erba","logo","jsxDEV","_jsxDEV","CreateTable","props","_s","playerPosition","setPlayerPosition","table","setTable","tableRows","rowCells","x","rows","y","columns","push","key","img","tabella","map","riga","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","setPlayerCenterPosition","blabla","arr","n","className","_c","$RefreshReg$"],"sources":["C:/Users/Prani/Documents/Progetto AIGrading/my-app/src/GrassGrid/CreateTable/CreateTable.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport erba from './assets/erba.png'\r\nimport logo from './assets/logoAiGrading.png'\r\nimport './CreateTable.css';\r\n\r\nfunction CreateTable(props) {\r\n    const [playerPosition, setPlayerPosition] = useState();\r\n    const [table, setTable] = useState();\r\n\r\n    useEffect(()=>{\r\n      const tableRows = [];\r\n      const rowCells = [];\r\n      for (let x = 0; x < props.rows; x++) {\r\n        for (let y = 0; y < props.columns; y++) {\r\n          rowCells.push({key: y, img: erba});\r\n          //rowCells.push(`<td className='erba' key=${y}><div className='noheight'><img src=${erba}/></div></td>`);\r\n        }\r\n        tableRows.push({key: x})\r\n        //tableRows.push(`<tr key=${x}>${rowCells}</tr>`);\r\n      }\r\n\r\n      let tabella = tableRows.map(riga => {\r\n        return <tr key={riga.x}>\r\n          <td>AAAAA</td>\r\n         {/*  {rowCells.map((cella, index) => {\r\n            return <td className='erba' key={cella.y}><div key={cella.y + index} className='noheight'><img src={erba}/></div></td>\r\n          })} */}\r\n        </tr>\r\n      })\r\n      \r\n    /*   let rows = [];\r\n      //20 righe\r\n       */\r\n      \r\n      console.log(tabella);\r\n\r\n      setTable(tabella);\r\n\r\n      /* Calculate the center coordinates\r\n      const centerRow = Math.floor(rows / 2) - 1;\r\n      const centerColumn = Math.floor(columns / 2) - 1;\r\n\r\n      if (tableRows[centerRow] && tableRows[centerRow].props.children[centerColumn]) {\r\n          setPlayerCenterPosition(centerRow,centerColumn)\r\n          tableRows[centerRow].props.children[centerColumn] = (\r\n            <td className='erba' key={centerColumn}>\r\n              <div className='noheight'>\r\n                  <img className='tile' src={logo} alt=\"pg\" />\r\n              </div>\r\n            </td>\r\n          );\r\n      }*/\r\n    },[])\r\n    \r\n    function setPlayerCenterPosition(x,y){\r\n      setPlayerPosition([x,y])\r\n    }\r\n\r\n    const blabla = () =>{\r\n      let arr = [1,2,3]\r\n      arr.map(n =>{ return (<tr><td>{n}</td></tr>)})\r\n    }\r\n    \r\n\r\n    return (\r\n      <table className=\"table\">\r\n        <tbody>\r\n          {blabla}\r\n        </tbody>\r\n      </table>\r\n    );\r\n}\r\n\r\nexport default CreateTable"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC;EACtD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAEpCD,SAAS,CAAC,MAAI;IACZ,MAAMa,SAAS,GAAG,EAAE;IACpB,MAAMC,QAAQ,GAAG,EAAE;IACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACS,IAAI,EAAED,CAAC,EAAE,EAAE;MACnC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,CAACW,OAAO,EAAED,CAAC,EAAE,EAAE;QACtCH,QAAQ,CAACK,IAAI,CAAC;UAACC,GAAG,EAAEH,CAAC;UAAEI,GAAG,EAAEnB;QAAI,CAAC,CAAC;QAClC;MACF;;MACAW,SAAS,CAACM,IAAI,CAAC;QAACC,GAAG,EAAEL;MAAC,CAAC,CAAC;MACxB;IACF;;IAEA,IAAIO,OAAO,GAAGT,SAAS,CAACU,GAAG,CAACC,IAAI,IAAI;MAClC,oBAAOnB,OAAA;QAAAoB,QAAA,eACLpB,OAAA;UAAAoB,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADAL,IAAI,CAACT,CAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKlB,CAAC;IACP,CAAC,CAAC;;IAEJ;AACJ;AACA;;IAEMC,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;IAEpBV,QAAQ,CAACU,OAAO,CAAC;;IAEjB;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEI,CAAC,EAAC,EAAE,CAAC;EAEL,SAASU,uBAAuBA,CAACjB,CAAC,EAACE,CAAC,EAAC;IACnCP,iBAAiB,CAAC,CAACK,CAAC,EAACE,CAAC,CAAC,CAAC;EAC1B;EAEA,MAAMgB,MAAM,GAAGA,CAAA,KAAK;IAClB,IAAIC,GAAG,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IACjBA,GAAG,CAACX,GAAG,CAACY,CAAC,IAAG;MAAE,oBAAQ9B,OAAA;QAAAoB,QAAA,eAAIpB,OAAA;UAAAoB,QAAA,EAAKU;QAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAC,CAAC,CAAC;EAChD,CAAC;EAGD,oBACExB,OAAA;IAAO+B,SAAS,EAAC,OAAO;IAAAX,QAAA,eACtBpB,OAAA;MAAAoB,QAAA,EACGQ;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACrB,EAAA,CAlEQF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAoEpB,eAAeA,WAAW;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}