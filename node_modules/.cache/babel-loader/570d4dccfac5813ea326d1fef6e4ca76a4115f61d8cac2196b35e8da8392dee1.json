{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prani\\\\Documents\\\\Progetto AIGrading\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const numRows = 20;\n  const numCells = 80;\n  const pokemonEncounterRate = 25;\n  const [position, setPosition] = useState({});\n  const [isInBattle, setIsInBattle] = useState(false);\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n  useEffect(() => {\n    let coordX = Math.floor(numCells / 2) - 1;\n    let coordY = Math.floor(numRows / 2) - 1;\n    let objCoords = {\n      x: coordX,\n      y: coordY\n    };\n    posRef.current = objCoords;\n    setPosition(objCoords);\n    window.addEventListener('keyup', movementHandler);\n  }, []);\n  const EncounterHandler = randomEncounter => {\n    return randomEncounter < pokemonEncounterRate;\n  };\n  const movementHandler = direction => {\n    if (inBattleRef.current) return;\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    let obj = {};\n    let randomEncounter = Math.floor(Math.random() * 100);\n    switch (direction.key) {\n      case 'ArrowUp':\n        obj = {\n          x: posX,\n          y: posY - 1 < 0 ? 0 : posY - 1\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowDown':\n        obj = {\n          x: posX,\n          y: posY + 1 >= numRows - 1 ? numRows - 1 : posY + 1\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowLeft':\n        obj = {\n          x: posX - 1 < 0 ? 0 : posX - 1,\n          y: posY\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowRight':\n        obj = {\n          x: posX + 1 >= numCells - 1 ? numCells - 1 : posX + 1,\n          y: posY\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n    }\n    setIsInBattle(EncounterHandler(randomEncounter));\n  };\n  useEffect(() => {\n    console.log(position);\n  }, [position]);\n  useEffect(() => {\n    console.log(isInBattle);\n  }, [isInBattle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: isInBattle ? undefined : /*#__PURE__*/_jsxDEV(GrassGrid, {\n          x: numCells,\n          y: numRows,\n          playerPosition: {\n            x: position.x,\n            y: position.y\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tgwpQFseNU8XlvgPsjnqZ6xeAbY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GrassGrid","jsxDEV","_jsxDEV","App","_s","numRows","numCells","pokemonEncounterRate","position","setPosition","isInBattle","setIsInBattle","posRef","inBattleRef","coordX","Math","floor","coordY","objCoords","x","y","current","window","addEventListener","movementHandler","EncounterHandler","randomEncounter","direction","posX","posY","obj","random","key","console","log","children","className","undefined","playerPosition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Prani/Documents/Progetto AIGrading/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React,{useState,useEffect, useRef} from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\n\nfunction App() {\n  \n  const numRows = 20;\n  const numCells = 80;\n  const pokemonEncounterRate = 25;\n\n  const [position, setPosition] = useState({});\n  const [isInBattle, setIsInBattle] = useState(false);\n\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n\n  useEffect(() => {\n    let coordX = Math.floor(numCells/2) - 1;\n    let coordY = Math.floor(numRows/2) - 1;\n    let objCoords = {\n        x: coordX,\n        y: coordY\n    } \n    posRef.current = objCoords;\n\n    setPosition(objCoords);\n\n    window.addEventListener('keyup', movementHandler)\n    \n  },[])\n\n  const EncounterHandler = (randomEncounter) => {\n    return randomEncounter < pokemonEncounterRate;\n  }\n\n  const movementHandler = (direction) => {\n    if(inBattleRef.current)return;\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    let obj  = {}; \n    let randomEncounter =  Math.floor(Math.random() * 100)\n    switch(direction.key){\n        case 'ArrowUp':\n            obj = {\n                x: posX,\n                y: (posY - 1 < 0) ? 0 : posY -1\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowDown':\n            obj = {\n                x: posX,\n                y: (posY + 1 >= numRows - 1) ? numRows - 1 : posY + 1\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowLeft':\n            obj = {\n                x: (posX - 1 < 0) ? 0 :posX - 1,\n                y: posY\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowRight':\n            obj = {\n                x: (posX + 1 >= numCells - 1) ? numCells - 1 : posX + 1,\n                y: posY\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n    }\n    setIsInBattle(EncounterHandler(randomEncounter))\n  }\n\n  useEffect(() => {\n    console.log(position)\n  },[position]) \n\n  useEffect(() => {\n    console.log(isInBattle)\n  },[isInBattle]) \n\n  return (\n    <div>\n      <div className=\"App\">\n        <header className=\"App-header\">\n            {isInBattle ? \n            undefined\n            :\n            <GrassGrid \n              x = {numCells} \n              y = {numRows} \n              playerPosition = {{x: position.x, y: position.y}}>\n            </GrassGrid>}\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACtD,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,oBAAoB,GAAG,EAAE;EAE/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMe,MAAM,GAAGb,MAAM,CAACS,QAAQ,CAAC;EAC/B,MAAMK,WAAW,GAAGd,MAAM,CAACW,UAAU,CAAC;EAEtCZ,SAAS,CAAC,MAAM;IACd,IAAIgB,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACV,QAAQ,GAAC,CAAC,CAAC,GAAG,CAAC;IACvC,IAAIW,MAAM,GAAGF,IAAI,CAACC,KAAK,CAACX,OAAO,GAAC,CAAC,CAAC,GAAG,CAAC;IACtC,IAAIa,SAAS,GAAG;MACZC,CAAC,EAAEL,MAAM;MACTM,CAAC,EAAEH;IACP,CAAC;IACDL,MAAM,CAACS,OAAO,GAAGH,SAAS;IAE1BT,WAAW,CAACS,SAAS,CAAC;IAEtBI,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEC,eAAe,CAAC;EAEnD,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,gBAAgB,GAAIC,eAAe,IAAK;IAC5C,OAAOA,eAAe,GAAGnB,oBAAoB;EAC/C,CAAC;EAED,MAAMiB,eAAe,GAAIG,SAAS,IAAK;IACrC,IAAGd,WAAW,CAACQ,OAAO,EAAC;IACvB,IAAIO,IAAI,GAAGhB,MAAM,CAACS,OAAO,CAACF,CAAC;IAC3B,IAAIU,IAAI,GAAGjB,MAAM,CAACS,OAAO,CAACD,CAAC;IAC3B,IAAIU,GAAG,GAAI,CAAC,CAAC;IACb,IAAIJ,eAAe,GAAIX,IAAI,CAACC,KAAK,CAACD,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACtD,QAAOJ,SAAS,CAACK,GAAG;MAChB,KAAK,SAAS;QACVF,GAAG,GAAG;UACFX,CAAC,EAAES,IAAI;UACPR,CAAC,EAAGS,IAAI,GAAG,CAAC,GAAG,CAAC,GAAI,CAAC,GAAGA,IAAI,GAAE;QAClC,CAAC;QACDjB,MAAM,CAACS,OAAO,GAAGS,GAAG;QACpBrB,WAAW,CAACqB,GAAG,CAAC;QACpB;MACA,KAAK,WAAW;QACZA,GAAG,GAAG;UACFX,CAAC,EAAES,IAAI;UACPR,CAAC,EAAGS,IAAI,GAAG,CAAC,IAAIxB,OAAO,GAAG,CAAC,GAAIA,OAAO,GAAG,CAAC,GAAGwB,IAAI,GAAG;QACxD,CAAC;QACDjB,MAAM,CAACS,OAAO,GAAGS,GAAG;QACpBrB,WAAW,CAACqB,GAAG,CAAC;QACpB;MACA,KAAK,WAAW;QACZA,GAAG,GAAG;UACFX,CAAC,EAAGS,IAAI,GAAG,CAAC,GAAG,CAAC,GAAI,CAAC,GAAEA,IAAI,GAAG,CAAC;UAC/BR,CAAC,EAAES;QACP,CAAC;QACDjB,MAAM,CAACS,OAAO,GAAGS,GAAG;QACpBrB,WAAW,CAACqB,GAAG,CAAC;QACpB;MACA,KAAK,YAAY;QACbA,GAAG,GAAG;UACFX,CAAC,EAAGS,IAAI,GAAG,CAAC,IAAItB,QAAQ,GAAG,CAAC,GAAIA,QAAQ,GAAG,CAAC,GAAGsB,IAAI,GAAG,CAAC;UACvDR,CAAC,EAAES;QACP,CAAC;QACDjB,MAAM,CAACS,OAAO,GAAGS,GAAG;QACpBrB,WAAW,CAACqB,GAAG,CAAC;QACpB;IACJ;IACAnB,aAAa,CAACc,gBAAgB,CAACC,eAAe,CAAC,CAAC;EAClD,CAAC;EAED5B,SAAS,CAAC,MAAM;IACdmC,OAAO,CAACC,GAAG,CAAC1B,QAAQ,CAAC;EACvB,CAAC,EAAC,CAACA,QAAQ,CAAC,CAAC;EAEbV,SAAS,CAAC,MAAM;IACdmC,OAAO,CAACC,GAAG,CAACxB,UAAU,CAAC;EACzB,CAAC,EAAC,CAACA,UAAU,CAAC,CAAC;EAEf,oBACER,OAAA;IAAAiC,QAAA,eACEjC,OAAA;MAAKkC,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBjC,OAAA;QAAQkC,SAAS,EAAC,YAAY;QAAAD,QAAA,EACzBzB,UAAU,GACX2B,SAAS,gBAETnC,OAAA,CAACF,SAAS;UACRmB,CAAC,EAAIb,QAAS;UACdc,CAAC,EAAIf,OAAQ;UACbiC,cAAc,EAAI;YAACnB,CAAC,EAAEX,QAAQ,CAACW,CAAC;YAAEC,CAAC,EAAEZ,QAAQ,CAACY;UAAC;QAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtC,EAAA,CAlGQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAoGZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}