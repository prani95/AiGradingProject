{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prani\\\\Documents\\\\Progetto AIGrading\\\\AiGradingProject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport Fight from './Fight/Fight';\nimport Instructions from './Pages/Instructions/Instructions';\nimport Home from './Pages/Home/Home';\nimport Grading from './Pages/Grading/Grading';\nimport chillAudio from \"./music/ChillingTheme.mp3\";\nimport battleAudio from \"./music/BattleTheme.mp3\";\nimport Company from './Pages/Company/Company';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  currentPage.len;\n  const numRows = 13;\n  const numCells = 60;\n  const pokemonEncounterRate = 10;\n  const [position, setPosition] = useState({});\n  const [isInBattle, setIsInBattle] = useState(false);\n  const [currentPage, setCurrentPage] = useState('Instructions');\n  const [audioBg, setAudioBg] = useState(new Audio(chillAudio));\n  const [audioFight, setAudioFight] = useState(new Audio(battleAudio));\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n  useEffect(() => {\n    let coordX = Math.floor(numCells / 2) - 1;\n    let coordY = Math.floor(numRows / 2);\n    let objCoords = {\n      x: coordX,\n      y: coordY\n    };\n    posRef.current = objCoords;\n    setPosition(objCoords);\n    window.addEventListener('keyup', movementHandler);\n  }, []);\n  const switchPage = () => {\n    switch (currentPage) {\n      case 'Instructions':\n        return /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this);\n      case 'Home':\n        return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this);\n      case 'Grading':\n        return /*#__PURE__*/_jsxDEV(Grading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this);\n      case 'Company':\n        return /*#__PURE__*/_jsxDEV(Company, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const playAudioBG = () => {\n    // Loop indefinitely until stop() is called\n    audioBg.play();\n    audioBg.volume = 0.05;\n    audioBg.loop = true;\n  };\n  const playAudioFight = () => {\n    audioBg.pause();\n    audioBg.currentTime = 0;\n    // Loop indefinitely until stop() is called\n    audioFight.play();\n    audioFight.volume = 0.05;\n    audioFight.loop = true;\n  };\n  const stopAudioFight = () => {\n    audioFight.pause();\n    audioFight.currentTime = 0;\n    playAudioBG();\n  };\n  const EncounterHandler = randomEncounter => {\n    return randomEncounter < pokemonEncounterRate;\n  };\n  const movementHandler = direction => {\n    if (direction.key != 'ArrowUp' && direction.key != 'ArrowDown' && direction.key != 'ArrowLeft' && direction.key != 'ArrowRight') return;\n    if (inBattleRef.current) return;\n    playAudioBG();\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    let obj = {};\n    let randomEncounter = Math.floor(Math.random() * 100);\n    switch (direction.key) {\n      case 'ArrowUp':\n        obj = {\n          x: posX,\n          y: posY - 1 < 0 ? 0 : posY - 1\n        };\n        break;\n      case 'ArrowDown':\n        obj = {\n          x: posX,\n          y: posY + 1 >= numRows - 1 ? numRows - 1 : posY + 1\n        };\n        break;\n      case 'ArrowLeft':\n        obj = {\n          x: posX - 1 < 0 ? 0 : posX - 1,\n          y: posY\n        };\n        break;\n      case 'ArrowRight':\n        obj = {\n          x: posX + 1 >= numCells - 1 ? numCells - 1 : posX + 1,\n          y: posY\n        };\n        break;\n    }\n    posRef.current = obj;\n    setPosition(obj);\n    if (EncounterHandler(randomEncounter)) {\n      inBattleRef.current = true;\n      setIsInBattle(true);\n      setCurrentPage('');\n    }\n  };\n  useEffect(() => {\n    if (isInBattle) {\n      playAudioFight();\n    } else {\n      stopAudioFight();\n      inBattleRef.current = false;\n    }\n  }, [isInBattle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isInBattle ? /*#__PURE__*/_jsxDEV(Fight, {\n      setIsInBattle: setIsInBattle,\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(GrassGrid, {\n      x: numCells,\n      y: numRows,\n      playerPosition: {\n        x: position.x,\n        y: position.y\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isInBattle ? 'bottom-section' : 'bottom-section-instructions',\n      children: switchPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A5psjunRAyCe0LkV/qglpW7znsI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GrassGrid","Fight","Instructions","Home","Grading","chillAudio","battleAudio","Company","jsxDEV","_jsxDEV","App","_s","currentPage","len","numRows","numCells","pokemonEncounterRate","position","setPosition","isInBattle","setIsInBattle","setCurrentPage","audioBg","setAudioBg","Audio","audioFight","setAudioFight","posRef","inBattleRef","coordX","Math","floor","coordY","objCoords","x","y","current","window","addEventListener","movementHandler","switchPage","fileName","_jsxFileName","lineNumber","columnNumber","playAudioBG","play","volume","loop","playAudioFight","pause","currentTime","stopAudioFight","EncounterHandler","randomEncounter","direction","key","posX","posY","obj","random","className","children","playerPosition","_c","$RefreshReg$"],"sources":["C:/Users/Prani/Documents/Progetto AIGrading/AiGradingProject/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React,{useState,useEffect, useRef} from 'react';\r\nimport GrassGrid from './GrassGrid/GrassGrid';\r\nimport Fight from './Fight/Fight';\r\nimport Instructions from './Pages/Instructions/Instructions';\r\nimport Home from './Pages/Home/Home';\r\nimport Grading from './Pages/Grading/Grading';\r\nimport chillAudio from \"./music/ChillingTheme.mp3\";\r\nimport battleAudio from \"./music/BattleTheme.mp3\";\r\nimport Company from './Pages/Company/Company';\r\n\r\nfunction App() {\r\n  \r\n  currentPage.len\r\n\r\n  const numRows = 13;\r\n  const numCells = 60;\r\n  const pokemonEncounterRate = 10;\r\n\r\n  const [position, setPosition] = useState({});\r\n  const [isInBattle, setIsInBattle] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState('Instructions');\r\n\r\n  const [audioBg, setAudioBg] = useState(new Audio(chillAudio));\r\n  const [audioFight, setAudioFight] = useState(new Audio(battleAudio));\r\n\r\n  const posRef = useRef(position);\r\n  const inBattleRef = useRef(isInBattle);\r\n\r\n  useEffect(() => {\r\n    let coordX = Math.floor(numCells/2) - 1;\r\n    let coordY = Math.floor(numRows/2);\r\n    let objCoords = {\r\n        x: coordX,\r\n        y: coordY\r\n    } \r\n    posRef.current = objCoords;\r\n\r\n    setPosition(objCoords);\r\n\r\n    window.addEventListener('keyup', movementHandler)\r\n    \r\n  },[])\r\n\r\n  const switchPage = () => {\r\n    switch(currentPage){\r\n      case 'Instructions':\r\n        return <Instructions></Instructions>\r\n      case 'Home':\r\n        return <Home></Home>\r\n      case 'Grading':\r\n        return <Grading></Grading>\r\n      case 'Company':\r\n        return <Company></Company>\r\n      default:\r\n        return <div></div>\r\n    }\r\n  }\r\n\r\n  const playAudioBG = () => {\r\n    // Loop indefinitely until stop() is called\r\n    audioBg.play();\r\n    audioBg.volume = 0.05;\r\n    audioBg.loop = true;\r\n }\r\n\r\n const playAudioFight = () => {\r\n  audioBg.pause();\r\n  audioBg.currentTime = 0;\r\n  // Loop indefinitely until stop() is called\r\n  audioFight.play();\r\n  audioFight.volume = 0.05;\r\n  audioFight.loop = true;\r\n}\r\n\r\nconst stopAudioFight = () => {\r\n  audioFight.pause();\r\n  audioFight.currentTime = 0;\r\n  playAudioBG();\r\n}\r\n\r\n  const EncounterHandler = (randomEncounter) => {\r\n    return randomEncounter < pokemonEncounterRate;\r\n  }\r\n\r\n  const movementHandler = (direction) => {\r\n    if(direction.key != 'ArrowUp' && direction.key != 'ArrowDown' && direction.key != 'ArrowLeft' && direction.key != 'ArrowRight') return;\r\n    if(inBattleRef.current) return;\r\n    playAudioBG()\r\n    let posX = posRef.current.x;\r\n    let posY = posRef.current.y;\r\n    let obj  = {};\r\n    let randomEncounter =  Math.floor(Math.random() * 100)\r\n    switch(direction.key){\r\n        case 'ArrowUp':\r\n            obj = {\r\n                x: posX,\r\n                y: (posY - 1 < 0) ? 0 : posY -1\r\n            }\r\n        break;\r\n        case 'ArrowDown':\r\n            obj = {\r\n                x: posX,\r\n                y: (posY + 1 >= numRows - 1) ? numRows - 1 : posY + 1\r\n            }\r\n        break;\r\n        case 'ArrowLeft':\r\n            obj = {\r\n                x: (posX - 1 < 0) ? 0 :posX - 1,\r\n                y: posY\r\n            }\r\n        break;\r\n        case 'ArrowRight':\r\n            obj = {\r\n                x: (posX + 1 >= numCells - 1) ? numCells - 1 : posX + 1,\r\n                y: posY\r\n            }\r\n        break;\r\n    }\r\n    posRef.current = obj;\r\n    setPosition(obj)\r\n    if(EncounterHandler(randomEncounter)){\r\n      inBattleRef.current = true\r\n      setIsInBattle(true)\r\n      setCurrentPage('')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isInBattle) { playAudioFight() }\r\n    else { stopAudioFight(); inBattleRef.current = false}\r\n  },[isInBattle]) \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isInBattle ? \r\n      <Fight\r\n        setIsInBattle = {setIsInBattle}\r\n        setCurrentPage = {setCurrentPage}\r\n      ></Fight>\r\n      :\r\n      <GrassGrid \r\n        x = {numCells} \r\n        y = {numRows} \r\n        playerPosition = {{x: position.x, y: position.y}}>\r\n      </GrassGrid>}\r\n      <div className={isInBattle ? 'bottom-section' : 'bottom-section-instructions'}>\r\n        {switchPage()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACtD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEbC,WAAW,CAACC,GAAG;EAEf,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,oBAAoB,GAAG,EAAE;EAE/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAACe,WAAW,EAAES,cAAc,CAAC,GAAGxB,QAAQ,CAAC,cAAc,CAAC;EAE9D,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI2B,KAAK,CAACnB,UAAU,CAAC,CAAC;EAC7D,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,IAAI2B,KAAK,CAAClB,WAAW,CAAC,CAAC;EAEpE,MAAMqB,MAAM,GAAG5B,MAAM,CAACkB,QAAQ,CAAC;EAC/B,MAAMW,WAAW,GAAG7B,MAAM,CAACoB,UAAU,CAAC;EAEtCrB,SAAS,CAAC,MAAM;IACd,IAAI+B,MAAM,GAAGC,IAAI,CAACC,KAAK,CAAChB,QAAQ,GAAC,CAAC,CAAC,GAAG,CAAC;IACvC,IAAIiB,MAAM,GAAGF,IAAI,CAACC,KAAK,CAACjB,OAAO,GAAC,CAAC,CAAC;IAClC,IAAImB,SAAS,GAAG;MACZC,CAAC,EAAEL,MAAM;MACTM,CAAC,EAAEH;IACP,CAAC;IACDL,MAAM,CAACS,OAAO,GAAGH,SAAS;IAE1Bf,WAAW,CAACe,SAAS,CAAC;IAEtBI,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEC,eAAe,CAAC;EAEnD,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,QAAO5B,WAAW;MAChB,KAAK,cAAc;QACjB,oBAAOH,OAAA,CAACP,YAAY;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MACtC,KAAK,MAAM;QACT,oBAAOnC,OAAA,CAACN,IAAI;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MACtB,KAAK,SAAS;QACZ,oBAAOnC,OAAA,CAACL,OAAO;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAC5B,KAAK,SAAS;QACZ,oBAAOnC,OAAA,CAACF,OAAO;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAC5B;QACE,oBAAOnC,OAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;IACtB;EACF,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAvB,OAAO,CAACwB,IAAI,CAAC,CAAC;IACdxB,OAAO,CAACyB,MAAM,GAAG,IAAI;IACrBzB,OAAO,CAAC0B,IAAI,GAAG,IAAI;EACtB,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC5B3B,OAAO,CAAC4B,KAAK,CAAC,CAAC;IACf5B,OAAO,CAAC6B,WAAW,GAAG,CAAC;IACvB;IACA1B,UAAU,CAACqB,IAAI,CAAC,CAAC;IACjBrB,UAAU,CAACsB,MAAM,GAAG,IAAI;IACxBtB,UAAU,CAACuB,IAAI,GAAG,IAAI;EACxB,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3B3B,UAAU,CAACyB,KAAK,CAAC,CAAC;IAClBzB,UAAU,CAAC0B,WAAW,GAAG,CAAC;IAC1BN,WAAW,CAAC,CAAC;EACf,CAAC;EAEC,MAAMQ,gBAAgB,GAAIC,eAAe,IAAK;IAC5C,OAAOA,eAAe,GAAGtC,oBAAoB;EAC/C,CAAC;EAED,MAAMuB,eAAe,GAAIgB,SAAS,IAAK;IACrC,IAAGA,SAAS,CAACC,GAAG,IAAI,SAAS,IAAID,SAAS,CAACC,GAAG,IAAI,WAAW,IAAID,SAAS,CAACC,GAAG,IAAI,WAAW,IAAID,SAAS,CAACC,GAAG,IAAI,YAAY,EAAE;IAChI,IAAG5B,WAAW,CAACQ,OAAO,EAAE;IACxBS,WAAW,CAAC,CAAC;IACb,IAAIY,IAAI,GAAG9B,MAAM,CAACS,OAAO,CAACF,CAAC;IAC3B,IAAIwB,IAAI,GAAG/B,MAAM,CAACS,OAAO,CAACD,CAAC;IAC3B,IAAIwB,GAAG,GAAI,CAAC,CAAC;IACb,IAAIL,eAAe,GAAIxB,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC8B,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACtD,QAAOL,SAAS,CAACC,GAAG;MAChB,KAAK,SAAS;QACVG,GAAG,GAAG;UACFzB,CAAC,EAAEuB,IAAI;UACPtB,CAAC,EAAGuB,IAAI,GAAG,CAAC,GAAG,CAAC,GAAI,CAAC,GAAGA,IAAI,GAAE;QAClC,CAAC;QACL;MACA,KAAK,WAAW;QACZC,GAAG,GAAG;UACFzB,CAAC,EAAEuB,IAAI;UACPtB,CAAC,EAAGuB,IAAI,GAAG,CAAC,IAAI5C,OAAO,GAAG,CAAC,GAAIA,OAAO,GAAG,CAAC,GAAG4C,IAAI,GAAG;QACxD,CAAC;QACL;MACA,KAAK,WAAW;QACZC,GAAG,GAAG;UACFzB,CAAC,EAAGuB,IAAI,GAAG,CAAC,GAAG,CAAC,GAAI,CAAC,GAAEA,IAAI,GAAG,CAAC;UAC/BtB,CAAC,EAAEuB;QACP,CAAC;QACL;MACA,KAAK,YAAY;QACbC,GAAG,GAAG;UACFzB,CAAC,EAAGuB,IAAI,GAAG,CAAC,IAAI1C,QAAQ,GAAG,CAAC,GAAIA,QAAQ,GAAG,CAAC,GAAG0C,IAAI,GAAG,CAAC;UACvDtB,CAAC,EAAEuB;QACP,CAAC;QACL;IACJ;IACA/B,MAAM,CAACS,OAAO,GAAGuB,GAAG;IACpBzC,WAAW,CAACyC,GAAG,CAAC;IAChB,IAAGN,gBAAgB,CAACC,eAAe,CAAC,EAAC;MACnC1B,WAAW,CAACQ,OAAO,GAAG,IAAI;MAC1BhB,aAAa,CAAC,IAAI,CAAC;MACnBC,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd,IAAGqB,UAAU,EAAE;MAAE8B,cAAc,CAAC,CAAC;IAAC,CAAC,MAC9B;MAAEG,cAAc,CAAC,CAAC;MAAExB,WAAW,CAACQ,OAAO,GAAG,KAAK;IAAA;EACtD,CAAC,EAAC,CAACjB,UAAU,CAAC,CAAC;EAEf,oBACEV,OAAA;IAAKoD,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjB3C,UAAU,gBACXV,OAAA,CAACR,KAAK;MACJmB,aAAa,EAAIA,aAAc;MAC/BC,cAAc,EAAIA;IAAe;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,gBAETnC,OAAA,CAACT,SAAS;MACRkC,CAAC,EAAInB,QAAS;MACdoB,CAAC,EAAIrB,OAAQ;MACbiD,cAAc,EAAI;QAAC7B,CAAC,EAAEjB,QAAQ,CAACiB,CAAC;QAAEC,CAAC,EAAElB,QAAQ,CAACkB;MAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACZnC,OAAA;MAAKoD,SAAS,EAAE1C,UAAU,GAAG,gBAAgB,GAAG,6BAA8B;MAAA2C,QAAA,EAC3EtB,UAAU,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CA7IQD,GAAG;AAAAsD,EAAA,GAAHtD,GAAG;AA+IZ,eAAeA,GAAG;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}