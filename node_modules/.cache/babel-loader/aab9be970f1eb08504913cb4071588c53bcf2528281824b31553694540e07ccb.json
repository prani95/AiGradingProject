{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prani\\\\Documents\\\\Progetto AIGrading\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport Fight from './Fight/Fight';\nimport Instructions from './Pages/Instructions/Instructions';\nimport chillAudio from \"./music/ChillingTheme.mp3\";\nimport battleAudio from \"./music/BattleTheme.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const numRows = 13;\n  const numCells = 60;\n  const pokemonEncounterRate = 10;\n  const [position, setPosition] = useState({});\n  const [isInBattle, setIsInBattle] = useState(false);\n  const [currentPage, setCurrentPage] = useState('Instructions');\n  const [audioBg, setAudioBg] = useState(new Audio(chillAudio));\n  const [audioFight, setAudioFight] = useState(new Audio(battleAudio));\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n  useEffect(() => {\n    let coordX = Math.floor(numCells / 2) - 1;\n    let coordY = Math.floor(numRows / 2);\n    let objCoords = {\n      x: coordX,\n      y: coordY\n    };\n    posRef.current = objCoords;\n    setPosition(objCoords);\n    window.addEventListener('keyup', movementHandler);\n  }, []);\n  const switchPage = () => {\n    switch (currentPage) {\n      case 'Instructions':\n        return /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n        break;\n    }\n  };\n  const playAudioBG = () => {\n    // Loop indefinitely until stop() is called\n    audioBg.play();\n    audioBg.volume = 0.05;\n    audioBg.loop = true;\n  };\n  const playAudioFight = () => {\n    audioBg.pause();\n    audioBg.currentTime = 0;\n    // Loop indefinitely until stop() is called\n    audioFight.play();\n    audioFight.volume = 0.05;\n    audioFight.loop = true;\n  };\n  const stopAudioFight = () => {\n    audioFight.pause();\n    audioFight.currentTime = 0;\n    playAudioBG();\n  };\n  const EncounterHandler = randomEncounter => {\n    return randomEncounter < pokemonEncounterRate;\n  };\n  const movementHandler = direction => {\n    if (direction.key != 'ArrowUp' && direction.key != 'ArrowDown' && direction.key != 'ArrowLeft' && direction.key != 'ArrowRight') return;\n    if (inBattleRef.current) return;\n    playAudioBG();\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    let obj = {};\n    let randomEncounter = Math.floor(Math.random() * 100);\n    switch (direction.key) {\n      case 'ArrowUp':\n        obj = {\n          x: posX,\n          y: posY - 1 < 0 ? 0 : posY - 1\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowDown':\n        obj = {\n          x: posX,\n          y: posY + 1 >= numRows - 1 ? numRows - 1 : posY + 1\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowLeft':\n        obj = {\n          x: posX - 1 < 0 ? 0 : posX - 1,\n          y: posY\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n      case 'ArrowRight':\n        obj = {\n          x: posX + 1 >= numCells - 1 ? numCells - 1 : posX + 1,\n          y: posY\n        };\n        posRef.current = obj;\n        setPosition(obj);\n        break;\n    }\n    inBattleRef.current = EncounterHandler(randomEncounter);\n    setIsInBattle(EncounterHandler(randomEncounter));\n  };\n  useEffect(() => {\n    console.log(position);\n  }, [position]);\n  useEffect(() => {\n    console.log(isInBattle);\n    if (isInBattle) {\n      playAudioFight();\n    } else {\n      stopAudioFight();\n      inBattleRef.current = false;\n    }\n  }, [isInBattle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isInBattle ? /*#__PURE__*/_jsxDEV(Fight, {\n      setIsInBattle: setIsInBattle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(GrassGrid, {\n      x: numCells,\n      y: numRows,\n      playerPosition: {\n        x: position.x,\n        y: position.y\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), switchPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vn/lbnq0bEgG8sEKhV2PBqc0j4M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GrassGrid","Fight","Instructions","chillAudio","battleAudio","jsxDEV","_jsxDEV","App","_s","numRows","numCells","pokemonEncounterRate","position","setPosition","isInBattle","setIsInBattle","currentPage","setCurrentPage","audioBg","setAudioBg","Audio","audioFight","setAudioFight","posRef","inBattleRef","coordX","Math","floor","coordY","objCoords","x","y","current","window","addEventListener","movementHandler","switchPage","fileName","_jsxFileName","lineNumber","columnNumber","playAudioBG","play","volume","loop","playAudioFight","pause","currentTime","stopAudioFight","EncounterHandler","randomEncounter","direction","key","posX","posY","obj","random","console","log","className","children","playerPosition","_c","$RefreshReg$"],"sources":["C:/Users/Prani/Documents/Progetto AIGrading/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React,{useState,useEffect, useRef} from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport Fight from './Fight/Fight';\nimport Instructions from './Pages/Instructions/Instructions';\nimport chillAudio from \"./music/ChillingTheme.mp3\";\nimport battleAudio from \"./music/BattleTheme.mp3\";\n\nfunction App() {\n  \n  const numRows = 13;\n  const numCells = 60;\n  const pokemonEncounterRate = 10;\n\n  const [position, setPosition] = useState({});\n  const [isInBattle, setIsInBattle] = useState(false);\n\n  const [currentPage, setCurrentPage] = useState('Instructions');\n\n  const [audioBg, setAudioBg] = useState(new Audio(chillAudio));\n  const [audioFight, setAudioFight] = useState(new Audio(battleAudio));\n\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n\n  useEffect(() => {\n    let coordX = Math.floor(numCells/2) - 1;\n    let coordY = Math.floor(numRows/2);\n    let objCoords = {\n        x: coordX,\n        y: coordY\n    } \n    posRef.current = objCoords;\n\n    setPosition(objCoords);\n\n    window.addEventListener('keyup', movementHandler)\n    \n  },[])\n\n  const switchPage = () => {\n    switch(currentPage){\n      case 'Instructions':\n        return <Instructions></Instructions>\n        break;\n    }\n  }\n\n  const playAudioBG = () => {\n    // Loop indefinitely until stop() is called\n    audioBg.play();\n    audioBg.volume = 0.05;\n    audioBg.loop = true;\n }\n\n const playAudioFight = () => {\n  audioBg.pause();\n  audioBg.currentTime = 0;\n  // Loop indefinitely until stop() is called\n  audioFight.play();\n  audioFight.volume = 0.05;\n  audioFight.loop = true;\n}\n\nconst stopAudioFight = () => {\n  audioFight.pause();\n  audioFight.currentTime = 0;\n  playAudioBG();\n}\n\n  const EncounterHandler = (randomEncounter) => {\n    return randomEncounter < pokemonEncounterRate;\n  }\n\n  const movementHandler = (direction) => {\n    if(direction.key != 'ArrowUp' && direction.key != 'ArrowDown' && direction.key != 'ArrowLeft' && direction.key != 'ArrowRight') return;\n    if(inBattleRef.current)return;\n    playAudioBG()\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    let obj  = {}; \n    let randomEncounter =  Math.floor(Math.random() * 100)\n    switch(direction.key){\n        case 'ArrowUp':\n            obj = {\n                x: posX,\n                y: (posY - 1 < 0) ? 0 : posY -1\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowDown':\n            obj = {\n                x: posX,\n                y: (posY + 1 >= numRows - 1) ? numRows - 1 : posY + 1\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowLeft':\n            obj = {\n                x: (posX - 1 < 0) ? 0 :posX - 1,\n                y: posY\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n        case 'ArrowRight':\n            obj = {\n                x: (posX + 1 >= numCells - 1) ? numCells - 1 : posX + 1,\n                y: posY\n            }\n            posRef.current = obj;\n            setPosition(obj)\n        break;\n    }\n    inBattleRef.current = EncounterHandler(randomEncounter)\n    setIsInBattle(EncounterHandler(randomEncounter))\n  }\n\n  useEffect(() => {\n    console.log(position)\n  },[position]) \n\n  useEffect(() => {\n    console.log(isInBattle)\n    if(isInBattle) { playAudioFight() }\n    else { stopAudioFight(); inBattleRef.current = false}\n  },[isInBattle]) \n\n  return (\n    <div className=\"App\">\n      {isInBattle ? \n      <Fight\n        setIsInBattle = {setIsInBattle}\n      ></Fight>\n      :\n      <GrassGrid \n        x = {numCells} \n        y = {numRows} \n        playerPosition = {{x: position.x, y: position.y}}>\n      </GrassGrid>}\n      {switchPage()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}