{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prani\\\\Documents\\\\Progetto AIGrading\\\\AiGradingProject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport Fight from './Fight/Fight';\nimport Home from './Pages/Home/Home';\nimport Grading from './Pages/Grading/Grading';\nimport Pause from './Pause/Pause';\nimport Company from './Pages/Company/Company';\nimport chillAudio from \"./music/ChillingTheme.mp3\";\nimport battleAudio from \"./music/BattleTheme.mp3\";\nimport startMenuAudio from \"./music/startmenu.mp3\";\nimport GameBoy from './GameBoy/GameBoy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [position, setPosition] = useState({});\n  const [windowWidth] = useState(window.innerWidth);\n  const [windowHeight] = useState(window.innerHeight);\n  const [isInBattle, setIsInBattle] = useState(false);\n  const [isInPause, setIsInPause] = useState(false);\n  const [currentPage, setCurrentPage] = useState('');\n  const [audioBg] = useState(new Audio(chillAudio));\n  const [audioFight] = useState(new Audio(battleAudio));\n  const [audioStartMenu] = useState(new Audio(startMenuAudio));\n  const [selectedMenu, setSelectedMenu] = useState(0);\n  const [pauseArray] = useState([\"Pokédex\", \"Pokémon\", \"Borsa\", \"AiGrading\", \"Salva\", \"Opzioni\", \"Esci\"]);\n  const posRef = useRef(position);\n  const inBattleRef = useRef(isInBattle);\n  const inPauseRef = useRef(isInPause);\n  const selectedRef = useRef(selectedMenu);\n  const numRows = Math.floor(windowHeight / 32);\n  const numCells = Math.floor(windowWidth / 32);\n  const pokemonEncounterRate = 10;\n  useEffect(() => {\n    let coordX = Math.floor(numCells / 2) - 1;\n    let coordY = Math.floor(numRows / 2);\n    let objCoords = {\n      x: coordX,\n      y: coordY\n    };\n    posRef.current = objCoords;\n    setPosition(objCoords);\n    window.addEventListener('keyup', movementHandler);\n  }, []);\n  const switchPage = () => {\n    switch (currentPage) {\n      case 'Home':\n        return /*#__PURE__*/_jsxDEV(Home, {\n          windowWidth: windowWidth,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this);\n      case 'Grading':\n        return /*#__PURE__*/_jsxDEV(Grading, {\n          windowWidth: windowWidth,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this);\n      case 'Company':\n        return /*#__PURE__*/_jsxDEV(Company, {\n          windowWidth: windowWidth,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  //#region audioHandlers\n  const playAudioBG = () => {\n    audioBg.play();\n    audioBg.volume = 0.05;\n    audioBg.loop = true;\n  };\n  const playAudioFight = () => {\n    audioBg.pause();\n    audioBg.currentTime = 0;\n    audioFight.play();\n    audioFight.volume = 0.05;\n    audioFight.loop = true;\n  };\n  const playAudioStartMenu = () => {\n    audioStartMenu.pause();\n    audioStartMenu.currentTime = 0;\n    audioStartMenu.play();\n    audioStartMenu.volume = 0.05;\n  };\n  const stopAudioFight = () => {\n    audioFight.pause();\n    audioFight.currentTime = 0;\n    playAudioBG();\n  };\n  //#endregion\n\n  const EncounterHandler = randomEncounter => {\n    return randomEncounter < pokemonEncounterRate;\n  };\n  const pause = () => {\n    inPauseRef.current = !inPauseRef.current;\n    setIsInPause(inPauseRef.current);\n    playAudioStartMenu();\n  };\n  const movePause = move => {\n    switch (move) {\n      case 'ArrowUp':\n        selectedRef.current--;\n        break;\n      case 'ArrowDown':\n        selectedRef.current++;\n        break;\n    }\n    if (selectedRef.current >= pauseArray.length) selectedRef.current = 0;\n    if (selectedRef.current < 0) selectedRef.current = pauseArray.length - 1;\n    setSelectedMenu(selectedRef.current);\n  };\n  const move = move => {\n    let obj = {};\n    let posX = posRef.current.x;\n    let posY = posRef.current.y;\n    switch (move) {\n      case 'ArrowUp':\n        obj = {\n          x: posX,\n          y: posY - 1 < 0 ? 0 : posY - 1\n        };\n        break;\n      case 'ArrowDown':\n        obj = {\n          x: posX,\n          y: posY + 1 >= numRows - 1 ? numRows - 1 : posY + 1\n        };\n        break;\n      case 'ArrowLeft':\n        obj = {\n          x: posX - 1 < 0 ? 0 : posX - 1,\n          y: posY\n        };\n        break;\n      case 'ArrowRight':\n        obj = {\n          x: posX + 1 >= numCells - 1 ? numCells - 1 : posX + 1,\n          y: posY\n        };\n        break;\n    }\n    posRef.current = obj;\n    setPosition(obj);\n    let randomEncounter = Math.floor(Math.random() * 100);\n    if (EncounterHandler(randomEncounter)) {\n      inBattleRef.current = true;\n      setIsInBattle(true);\n      setCurrentPage('');\n    }\n  };\n  const movementHandler = direction => {\n    if (direction.key !== 'ArrowUp' && direction.key !== 'ArrowDown' && direction.key !== 'ArrowLeft' && direction.key !== 'ArrowRight') return;\n    if (inPauseRef.current) return;\n    if (inBattleRef.current) return;\n    playAudioBG();\n    move(direction.key);\n  };\n  useEffect(() => {\n    if (isInBattle) {\n      playAudioFight();\n    } else {\n      stopAudioFight();\n      inBattleRef.current = false;\n    }\n  }, [isInBattle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GameBoy, {\n        windowWidth: windowWidth,\n        windowHeight: windowHeight,\n        move: move,\n        inPauseRef: inPauseRef,\n        pauseFunction: pause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), isInBattle ? /*#__PURE__*/_jsxDEV(Fight, {\n        setIsInBattle: setIsInBattle,\n        setCurrentPage: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Pause, {\n          setIsInPause: setIsInPause,\n          inPauseRef: inPauseRef,\n          pauseFunction: pause,\n          movePause: movePause,\n          pauseArray: pauseArray,\n          selectedMenu: selectedMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GrassGrid, {\n          x: numCells,\n          y: numRows,\n          playerPosition: {\n            x: position.x,\n            y: position.y\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-section\",\n      children: switchPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6x+m/eRWneYhHFx9PUJXFNC/mH4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GrassGrid","Fight","Home","Grading","Pause","Company","chillAudio","battleAudio","startMenuAudio","GameBoy","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","position","setPosition","windowWidth","window","innerWidth","windowHeight","innerHeight","isInBattle","setIsInBattle","isInPause","setIsInPause","currentPage","setCurrentPage","audioBg","Audio","audioFight","audioStartMenu","selectedMenu","setSelectedMenu","pauseArray","posRef","inBattleRef","inPauseRef","selectedRef","numRows","Math","floor","numCells","pokemonEncounterRate","coordX","coordY","objCoords","x","y","current","addEventListener","movementHandler","switchPage","fileName","_jsxFileName","lineNumber","columnNumber","playAudioBG","play","volume","loop","playAudioFight","pause","currentTime","playAudioStartMenu","stopAudioFight","EncounterHandler","randomEncounter","movePause","move","length","obj","posX","posY","random","direction","key","className","children","pauseFunction","playerPosition","_c","$RefreshReg$"],"sources":["C:/Users/Prani/Documents/Progetto AIGrading/AiGradingProject/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React,{useState,useEffect, useRef} from 'react';\r\nimport GrassGrid from './GrassGrid/GrassGrid';\r\nimport Fight from './Fight/Fight';\r\nimport Home from './Pages/Home/Home';\r\nimport Grading from './Pages/Grading/Grading';\r\nimport Pause from './Pause/Pause';\r\nimport Company from './Pages/Company/Company';\r\nimport chillAudio from \"./music/ChillingTheme.mp3\";\r\nimport battleAudio from \"./music/BattleTheme.mp3\";\r\nimport startMenuAudio from \"./music/startmenu.mp3\";\r\nimport GameBoy from './GameBoy/GameBoy';\r\n\r\nfunction App() {\r\n\r\n  const [position, setPosition] = useState({});\r\n\r\n  const [windowWidth] = useState(window.innerWidth);\r\n  const [windowHeight] = useState(window.innerHeight);\r\n\r\n  const [isInBattle, setIsInBattle] = useState(false);\r\n  const [isInPause, setIsInPause] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState('');\r\n\r\n  const [audioBg] = useState(new Audio(chillAudio));\r\n  const [audioFight] = useState(new Audio(battleAudio));\r\n  const [audioStartMenu] = useState(new Audio(startMenuAudio));\r\n\r\n  const [selectedMenu, setSelectedMenu] = useState(0);\r\n  const [pauseArray] = useState([\"Pokédex\",\"Pokémon\",\"Borsa\",\"AiGrading\",\"Salva\",\"Opzioni\",\"Esci\"])\r\n\r\n  const posRef = useRef(position);\r\n  const inBattleRef = useRef(isInBattle);\r\n  const inPauseRef = useRef(isInPause);\r\n  const selectedRef = useRef(selectedMenu);\r\n\r\n  const numRows = Math.floor(windowHeight / 32);\r\n  const numCells = Math.floor(windowWidth / 32);\r\n  const pokemonEncounterRate = 10;\r\n\r\n  useEffect(() => {\r\n    let coordX = Math.floor(numCells/2) - 1;\r\n    let coordY = Math.floor(numRows/2);\r\n    let objCoords = {\r\n        x: coordX,\r\n        y: coordY\r\n    } \r\n    posRef.current = objCoords;\r\n\r\n    setPosition(objCoords);\r\n\r\n    window.addEventListener('keyup', movementHandler);\r\n  },[])\r\n\r\n  const switchPage = () => {\r\n    switch(currentPage){\r\n      case 'Home':\r\n        return <Home windowWidth = {windowWidth} setCurrentPage = {setCurrentPage}></Home>\r\n      case 'Grading':\r\n        return <Grading windowWidth = {windowWidth} setCurrentPage = {setCurrentPage}></Grading>\r\n      case 'Company':\r\n        return <Company windowWidth = {windowWidth} setCurrentPage = {setCurrentPage}></Company>\r\n      default:\r\n        return <div></div>\r\n    }\r\n  }\r\n\r\n  //#region audioHandlers\r\n  const playAudioBG = () => {\r\n    audioBg.play();\r\n    audioBg.volume = 0.05;\r\n    audioBg.loop = true;\r\n  }\r\n\r\n  const playAudioFight = () => {\r\n    audioBg.pause();\r\n    audioBg.currentTime = 0;\r\n    audioFight.play();\r\n    audioFight.volume = 0.05;\r\n    audioFight.loop = true;\r\n  }\r\n\r\n  const playAudioStartMenu = () => {\r\n    audioStartMenu.pause();\r\n    audioStartMenu.currentTime = 0;\r\n    audioStartMenu.play();\r\n    audioStartMenu.volume = 0.05;\r\n  }\r\n\r\n  const stopAudioFight = () => {\r\n    audioFight.pause();\r\n    audioFight.currentTime = 0;\r\n    playAudioBG();\r\n  }\r\n  //#endregion\r\n\r\n  const EncounterHandler = (randomEncounter) => {\r\n    return randomEncounter < pokemonEncounterRate;\r\n  }\r\n\r\n  const pause = ()=>{\r\n    inPauseRef.current = !inPauseRef.current;\r\n    setIsInPause(inPauseRef.current);\r\n    playAudioStartMenu();\r\n  }\r\n\r\n  const movePause = (move) => {\r\n    switch(move){\r\n      case 'ArrowUp':\r\n          selectedRef.current--;\r\n      break;\r\n      case 'ArrowDown':\r\n          selectedRef.current++;\r\n      break;\r\n    }\r\n    if(selectedRef.current >= pauseArray.length) selectedRef.current = 0;\r\n    if(selectedRef.current < 0) selectedRef.current = pauseArray.length - 1;\r\n    setSelectedMenu(selectedRef.current);      \r\n  }\r\n\r\n  const move = (move) => {\r\n    let obj  = {};\r\n    let posX = posRef.current.x;\r\n    let posY = posRef.current.y;\r\n    switch(move){\r\n      case 'ArrowUp':\r\n          obj = {\r\n              x: posX,\r\n              y: (posY - 1 < 0) ? 0 : posY -1\r\n          }\r\n      break;\r\n      case 'ArrowDown':\r\n          obj = {\r\n              x: posX,\r\n              y: (posY + 1 >= numRows - 1) ? numRows - 1 : posY + 1\r\n          }\r\n      break;\r\n      case 'ArrowLeft':\r\n          obj = {\r\n              x: (posX - 1 < 0) ? 0 :posX - 1,\r\n              y: posY\r\n          }\r\n      break;\r\n      case 'ArrowRight':\r\n          obj = {\r\n              x: (posX + 1 >= numCells - 1) ? numCells - 1 : posX + 1,\r\n              y: posY\r\n          }\r\n      break;\r\n    }\r\n    posRef.current = obj;\r\n    setPosition(obj);\r\n    let randomEncounter =  Math.floor(Math.random() * 100);\r\n    if(EncounterHandler(randomEncounter)){\r\n      inBattleRef.current = true;\r\n      setIsInBattle(true);\r\n      setCurrentPage('');\r\n    }\r\n  }\r\n\r\n  const movementHandler = (direction) => {\r\n    if(direction.key !== 'ArrowUp' && direction.key !== 'ArrowDown' && direction.key !== 'ArrowLeft' && direction.key !== 'ArrowRight') return;\r\n    if(inPauseRef.current) return;\r\n    if(inBattleRef.current) return;\r\n    playAudioBG()\r\n    move(direction.key);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isInBattle) { playAudioFight() }\r\n    else { stopAudioFight(); inBattleRef.current = false}\r\n  },[isInBattle]) \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <GameBoy\r\n          windowWidth = {windowWidth}\r\n          windowHeight = {windowHeight}\r\n          move = {move}\r\n          inPauseRef = {inPauseRef}\r\n          pauseFunction = {pause}>\r\n        </GameBoy>\r\n        {isInBattle ? \r\n        <Fight\r\n          setIsInBattle = {setIsInBattle}\r\n          setCurrentPage = {setCurrentPage}>\r\n        </Fight>\r\n        :\r\n        <>\r\n          <Pause \r\n              setIsInPause = {setIsInPause}\r\n              inPauseRef = {inPauseRef}\r\n              pauseFunction = {pause}\r\n              movePause = {movePause}\r\n              pauseArray = {pauseArray}\r\n              selectedMenu = {selectedMenu}>\r\n          </Pause>\r\n          <GrassGrid \r\n            x = {numCells} \r\n            y = {numRows} \r\n            playerPosition = {{x: position.x, y: position.y}}>\r\n          </GrassGrid>\r\n        </>\r\n        }\r\n      </div>\r\n      <div className='bottom-section'>\r\n        {switchPage()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}