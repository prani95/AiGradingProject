{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prani\\\\Documents\\\\Progetto AIGrading\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const numRows = 20;\n  const numCells = 80;\n  const [playerPosition, setPlayerPosition] = useState({});\n  useEffect(() => {\n    console.log('inizio');\n    window.addEventListener('keyup', event => {\n      switch (event.key) {\n        case 'ArrowUp':\n          movePlayer('Up');\n          break;\n        case 'ArrowDown':\n          movePlayer('Down');\n          break;\n        case 'ArrowLeft':\n          movePlayer('Left');\n          break;\n        case 'ArrowRight':\n          movePlayer('Right');\n          break;\n      }\n    });\n    let calcX = Math.floor(numCells / 2) - 1;\n    let calcY = Math.floor(numRows / 2) - 1;\n    setPlayerPosition('a');\n  }, []);\n  function movePlayer(direction) {\n    let playerPositionCopy = {\n      ...playerPosition\n    };\n    console.log('playerPosition: ', playerPositionCopy);\n    switch (direction) {\n      case 'Up':\n        setPlayerPosition({\n          x: playerPositionCopy.x,\n          y: playerPositionCopy.y - 1\n        });\n        break;\n      case 'Down':\n        setPlayerPosition({\n          x: playerPositionCopy.x,\n          y: playerPositionCopy.y + 1\n        });\n        break;\n      case 'Left':\n        setPlayerPosition({\n          x: playerPositionCopy.x - 1,\n          y: playerPositionCopy.y\n        });\n        break;\n      case 'Right':\n        setPlayerPosition({\n          x: playerPositionCopy.x + 1,\n          y: playerPositionCopy.y\n        });\n        break;\n    }\n  }\n  useEffect(() => {\n    if (Object.keys(playerPosition).length) {\n      console.log('playerPosition useEffect', playerPosition);\n    }\n  }, [playerPosition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [console.log('nel return html', playerPosition), /*#__PURE__*/_jsxDEV(GrassGrid, {\n          x: numCells,\n          y: numRows,\n          playerPosition: playerPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Iu61H3pUrtCFx7Q7qmfhDG5QvGs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GrassGrid","jsxDEV","_jsxDEV","App","_s","numRows","numCells","playerPosition","setPlayerPosition","console","log","window","addEventListener","event","key","movePlayer","calcX","Math","floor","calcY","direction","playerPositionCopy","x","y","Object","keys","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Prani/Documents/Progetto AIGrading/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React,{useState,useEffect} from 'react';\nimport GrassGrid from './GrassGrid/GrassGrid';\n\nfunction App() {\n\n  const numRows = 20;\n  const numCells = 80;\n  \n  const [playerPosition, setPlayerPosition] = useState({});\n\n  useEffect(()=>{\n    console.log('inizio')\n    window.addEventListener('keyup', (event) => {\n      switch (event.key){\n          case 'ArrowUp': movePlayer('Up'); break;\n          case 'ArrowDown': movePlayer('Down'); break;\n          case 'ArrowLeft': movePlayer('Left'); break;\n          case 'ArrowRight': movePlayer('Right'); break;\n      }\n    })\n\n    let calcX = Math.floor(numCells / 2) - 1;\n    let calcY = Math.floor(numRows / 2) - 1;\n    setPlayerPosition('a');\n  },[])\n\n  function movePlayer(direction){\n    let playerPositionCopy = {...playerPosition};\n    console.log('playerPosition: ',playerPositionCopy);\n    switch(direction){\n      case 'Up':\n          setPlayerPosition({x: playerPositionCopy.x, y: playerPositionCopy.y - 1})\n        break;\n      case 'Down':\n          setPlayerPosition({x: playerPositionCopy.x, y: playerPositionCopy.y + 1})\n        break;\n      case 'Left':\n          setPlayerPosition({x: playerPositionCopy.x - 1, y: playerPositionCopy.y})\n        break;\n      case 'Right':\n          setPlayerPosition({x: playerPositionCopy.x + 1, y: playerPositionCopy.y})\n        break;\n    }\n    \n  }\n\n  useEffect(()=>{\n    if(Object.keys(playerPosition).length){console.log('playerPosition useEffect', playerPosition)}\n  },[playerPosition])\n\n  return (\n    <div>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {console.log('nel return html', playerPosition)}\n            <GrassGrid \n              x = {numCells} \n              y = {numRows} \n              playerPosition = {playerPosition}>\n            </GrassGrid>\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}