{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prani\\\\Documents\\\\Progetto AIGrading\\\\my-app\\\\src\\\\GrassGrid\\\\CreateTable\\\\CreateTable.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport erba from './assets/erba.png';\nimport logo from './assets/logoAiGrading.png';\nimport './CreateTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTable(props) {\n  _s();\n  const [playerPosition, setPlayerPosition] = useState();\n  const [table, setTable] = useState();\n  useEffect(() => {\n    const tableRows = [];\n    for (let x = 0; x < props.rows; x++) {\n      const rowCells = [];\n      for (let y = 0; y < props.columns; y++) {\n        rowCells.push({\n          key: y,\n          img: erba\n        });\n        //rowCells.push(`<td className='erba' key=${y}><div className='noheight'><img src=${erba}/></div></td>`);\n      }\n\n      tableRows.push({\n        key: x\n      });\n      //tableRows.push(`<tr key=${x}>${rowCells}</tr>`);\n    }\n\n    let tabella = tableRows.map(riga => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: rowCells.map(cella => {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"erba\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"noheight\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: erba\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 81\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 55\n            }, this)\n          }, cella.y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 20\n          }, this);\n        })\n      }, riga.x, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this);\n    });\n\n    /*   let rows = [];\r\n      //20 righe\r\n       */\n\n    console.log(tabella);\n    setTable(tableRows);\n\n    /* Calculate the center coordinates\r\n    const centerRow = Math.floor(rows / 2) - 1;\r\n    const centerColumn = Math.floor(columns / 2) - 1;\r\n      if (tableRows[centerRow] && tableRows[centerRow].props.children[centerColumn]) {\r\n        setPlayerCenterPosition(centerRow,centerColumn)\r\n        tableRows[centerRow].props.children[centerColumn] = (\r\n          <td className='erba' key={centerColumn}>\r\n            <div className='noheight'>\r\n                <img className='tile' src={logo} alt=\"pg\" />\r\n            </div>\r\n          </td>\r\n        );\r\n    }*/\n  }, []);\n  function setPlayerCenterPosition(x, y) {\n    setPlayerPosition([x, y]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n_s(CreateTable, \"DOpH8NHO+9Im2E2MTPleoWiVLU0=\");\n_c = CreateTable;\nexport default CreateTable;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","erba","logo","jsxDEV","_jsxDEV","CreateTable","props","_s","playerPosition","setPlayerPosition","table","setTable","tableRows","x","rows","rowCells","y","columns","push","key","img","tabella","map","riga","children","cella","className","src","fileName","_jsxFileName","lineNumber","columnNumber","console","log","setPlayerCenterPosition","_c","$RefreshReg$"],"sources":["C:/Users/Prani/Documents/Progetto AIGrading/my-app/src/GrassGrid/CreateTable/CreateTable.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport erba from './assets/erba.png'\r\nimport logo from './assets/logoAiGrading.png'\r\nimport './CreateTable.css';\r\n\r\nfunction CreateTable(props) {\r\n    const [playerPosition, setPlayerPosition] = useState();\r\n    const [table, setTable] = useState();\r\n\r\n    useEffect(()=>{\r\n      const tableRows = [];\r\n      for (let x = 0; x < props.rows; x++) {\r\n        const rowCells = [];\r\n    \r\n        for (let y = 0; y < props.columns; y++) {\r\n          rowCells.push({key: y, img: erba});\r\n          //rowCells.push(`<td className='erba' key=${y}><div className='noheight'><img src=${erba}/></div></td>`);\r\n        }\r\n        tableRows.push({key: x})\r\n        //tableRows.push(`<tr key=${x}>${rowCells}</tr>`);\r\n      }\r\n\r\n      let tabella = tableRows.map(riga => {\r\n        return <tr key={riga.x}>\r\n          {rowCells.map(cella => {\r\n            return <td className='erba' key={cella.y}><div className='noheight'><img src={erba}/></div></td>\r\n          })}\r\n        </tr>\r\n      })\r\n      \r\n    /*   let rows = [];\r\n      //20 righe\r\n       */\r\n      \r\n      console.log(tabella);\r\n\r\n      setTable(tableRows);\r\n\r\n      /* Calculate the center coordinates\r\n      const centerRow = Math.floor(rows / 2) - 1;\r\n      const centerColumn = Math.floor(columns / 2) - 1;\r\n\r\n      if (tableRows[centerRow] && tableRows[centerRow].props.children[centerColumn]) {\r\n          setPlayerCenterPosition(centerRow,centerColumn)\r\n          tableRows[centerRow].props.children[centerColumn] = (\r\n            <td className='erba' key={centerColumn}>\r\n              <div className='noheight'>\r\n                  <img className='tile' src={logo} alt=\"pg\" />\r\n              </div>\r\n            </td>\r\n          );\r\n      }*/\r\n    },[])\r\n    \r\n    function setPlayerCenterPosition(x,y){\r\n      setPlayerPosition([x,y])\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n      <table className=\"table\">\r\n        <tbody>\r\n          {table}\r\n        </tbody>\r\n      </table>\r\n    );\r\n}\r\n\r\nexport default CreateTable"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC;EACtD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAEpCD,SAAS,CAAC,MAAI;IACZ,MAAMa,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,CAACQ,IAAI,EAAED,CAAC,EAAE,EAAE;MACnC,MAAME,QAAQ,GAAG,EAAE;MAEnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,CAACW,OAAO,EAAED,CAAC,EAAE,EAAE;QACtCD,QAAQ,CAACG,IAAI,CAAC;UAACC,GAAG,EAAEH,CAAC;UAAEI,GAAG,EAAEnB;QAAI,CAAC,CAAC;QAClC;MACF;;MACAW,SAAS,CAACM,IAAI,CAAC;QAACC,GAAG,EAAEN;MAAC,CAAC,CAAC;MACxB;IACF;;IAEA,IAAIQ,OAAO,GAAGT,SAAS,CAACU,GAAG,CAACC,IAAI,IAAI;MAClC,oBAAOnB,OAAA;QAAAoB,QAAA,EACJT,QAAQ,CAACO,GAAG,CAACG,KAAK,IAAI;UACrB,oBAAOrB,OAAA;YAAIsB,SAAS,EAAC,MAAM;YAAAF,QAAA,eAAepB,OAAA;cAAKsB,SAAS,EAAC,UAAU;cAAAF,QAAA,eAACpB,OAAA;gBAAKuB,GAAG,EAAE1B;cAAK;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC,GAA1DN,KAAK,CAACT,CAAC;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuD,CAAC;QAClG,CAAC;MAAC,GAHYR,IAAI,CAACV,CAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CAAC;IACP,CAAC,CAAC;;IAEJ;AACJ;AACA;;IAEMC,OAAO,CAACC,GAAG,CAACZ,OAAO,CAAC;IAEpBV,QAAQ,CAACC,SAAS,CAAC;;IAEnB;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEI,CAAC,EAAC,EAAE,CAAC;EAEL,SAASsB,uBAAuBA,CAACrB,CAAC,EAACG,CAAC,EAAC;IACnCP,iBAAiB,CAAC,CAACI,CAAC,EAACG,CAAC,CAAC,CAAC;EAC1B;EAKA,oBACEZ,OAAA;IAAOsB,SAAS,EAAC,OAAO;IAAAF,QAAA,eACtBpB,OAAA;MAAAoB,QAAA,EACGd;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACxB,EAAA,CA/DQF,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAiEpB,eAAeA,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}